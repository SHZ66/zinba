    \name{run.zinba}
          \Rdversion{1.0}
          \alias{run.zinba}
          \title{Run Analysis pipeline}
          \description{
            This is the main function in Zinba where one starts with a set of mapped reads or an existing set of processed data (can reference to these already built files by specifying the path to their corresponding filelist). 

If specified, the first step is taking the raw mapped sample reads, raw mapped input reads (if available), alignability directory, and current build of the human genome and building the datasets needed to run the analysis to detect enriched regions.  

After the data is built, the locations of each built file (one for each chromsome and offset) is placed in filelist.  The next step uses the locations in filelist to import this built data and runs getsigwidnows on it to find windows that are likely to be neriched for counts.  

The posterior probabilities for each window are saved, and the locations of these files are placed in the outfile.winlist file, where outfile is the name chosen to denote the output files of this current run.  The winlist is then fed to getrefinedpeaks if peak refinement is desired. The overlapping signficant windows are merged and the SBPC for these merged windows are imported and exact peak boundaries are determined and outputted to outfile.peaks.   
          }
          \usage{run.zinba(filelist=NULL,formula=NULL,formulaE=NULL,outfile=NULL,seq=NULL,align=NULL,input="none",twoBit=NULL,winSize=500,offset=0,cnvWinSize=100000,cnvOffset=0,basecountfile=NULL,threshold=0.01,peakconfidence=.8,tol=10^-5,numProc=1,buildwin=0,pWinSize=200,pquant=0.75,refinepeaks=1,printFullOut=0,method='pscl',initmethod='count',diff=0,filetype="bowtie",extension)}
          \arguments{
	    \item{buildwin}{A value of 1 specifies whether you would like to build the data from the raw data, with the locations of the built data files being places in fillist.  Raw data corresponds to the mapped sample reads, raw mapped input reads (if available), and the current build of the human genome and the alignabilty files.  A value of 0 specifies you would like to skip this step and use an existing filelist (corresponding to a previously built set of data)}
            \item{filelist}{if buildwin=1, a file will be created at path 'filelist' upon building of the processed data from the raw data. If buildwin=0 then the path to an existing filelist corresponding to already built dataset}
	    \item{method}{if 'mixture' is selected, the mixture regression model approach is used (must specify formula and formulaE). If 'pscl' is specified, then only needs to specify formula.  Pscl is an adhoc method that is used on FAIRE data}
	    \item{formula}{Specifies the formula desired to model the background component of counts.  Must begin with "exp_count~"  and end with a set of desired covariates separated by "+", where the covariates could be input_count (input), gcPerc (gc percentage), exp_cnvwin_log (cnv estimate), and align_perc (alignability estimate).  Examples:  If sufficiently sequenced input is present, exp_count~input_count.  If no input is present, exp_count~gcPerc+exp_cnvwin_log+align_perc is sufficient. }
	    \item{formulaE}{Specifies the formula desired to model the enriched component.  If one is unsure about making assumptions about the relationship with covarites and enriched signal, use exp_count~1}
	    \item{outfile}{Prefix used to denote the .wins, .winlist and .peaks files that are outputted by zinba}
	    \item{seq}{path to mapped sample reads if buildwin=1, formatted as either 'bed', 'tagAlign', or 'bowtie'}
	    \item{align}{path to directory containing alignability files for each chromsome, obtained from alignAdjust (check how these files are generated)}
	    \item{input}{path to mapped input reads if buildwin=1, formatted as either 'bed', 'tagAlign', or 'bowtie'.  If left blank, then defaults to 'none'}
	    \item{extension}{average length of fragments in fragment library used, typically around 200}
	    \item{twobit}{path to current build of human genome in .2bit format}
	    \item{winSize}{window size, default=500bp}
	    \item{offset}{bp offset, default is none.  If one's winSize is 500 and would like 4 equally spaced offsets, then specifying offset=125 would achieve this}
	    \item{basecountfile}{path to basecount track containing SBPC information for the entire genome, generated by basealigncount}
	    \item{peakconfidence}{posterior probability threshold  for signfiicant windows if the mixture regression model is used}
	    \item{threshold}{FDR threshold for signfiicant windows if the pscl method is used}
	    \item{numProc}{number of concurrent jobs to run in parallel, default is 1, recommended to use more if more computing cores are available.  More memory is needed however when more processes are run in parallel.  If using winSize of 500, 4 cores is sufficient for a desktop with 4 GB of memory, smaller winSizes require more memory}
	    \item{filetype}{format of mapped sample and input reads.  'bed' is files in the standard .bed format, 'tagAlign' signifies those in .taf format, and 'bowtie' signifies mapped reads directly outputted from bowtie.  Default is 'bowtie'}
	    \item{refinepeaks}{whether refinement of peak regions is requested (default), otherwise  set to 0}
	    \item{OPTIONAL_PARAMETERS}{Below are a list of tuning parameters one may seek to modify as needed, all have default values}
	    \item{tol}{Relative tolerance for convergence, default  is 10^-5}
	    \item{initmethod}{Method of intial partitioning of windows into each component prior to mixture regression model run.  usually does nto make a difference. 'count' is default, specifies taking the windows with largest counts and classifying them intially as enriched.  'quantile' runs a quantile regression onthe data using the background covariates, takes the top residuals and assigns them as enriched.  'pscl' uses the pscl method to find likely enriched regions and assigns these windows to the enriched component. } 
	    \item{printFullOut}{If set to 1, prints out the original dataset along with the posterior probabilities (default).  Otherwise, prints out only window coordinates and posterior probabilites}
	    \item{cnvWinSize}{Size of windows used to calculate CNV activity in sample, default size is 100000}
	    \item{cnvOffset}{Offset for CNV windows, typically 2500bp is suffcient, although default is no offsets}
	    \item{pWinSize}{In the peak refinement step, reduce this parameter to get more sensitivity to detect local Maximums, default is 200.  This may increase false positives}
	    \item{pquant}{In the peak refinement step, filters out local maximums whose height is lower than the 'pquant' quantile in the window. Use pquant=1 for selecting only the global max in a collapsed region, god for ChIP-seq datasets.  Default is .75}
	   \item{diff}{unimplemented parameter, pertains to differential peak expression analysis accross samples}	
}
          \seealso{
            \code{\link{save}}.
          }
          \examples{
	   #Chip-Seq with recommended parameters
	   run.zinba(filelist='filelist.list',formulaE=exp_count~1,formula=exp_count~input_count,outfile='ctcf/zinbaOutput',seq='ctcf.taf' ,align='align/',input= 'ctcfinput.taf' ,twoBit='hg18.2bit',winSize=500,offset=125,cnvWinSize=100000,cnvOffset=2500,basecountfile='ctcf.basecount',peakconfidence=.95,tol=10^-5,numProc=4,buildwin=1,pWinSize=200,pquant=1,refinepeaks=1,printFullOut=1,method='mixture',initmethod='count',filetype='bed', extension=200)
		
	   #FAIRE-seq with recommended parameters, no input.  
	   run.zinba(filelist='faire.list',formulaE=exp_count~1,formula=exp_count~exp_cnvwin_log+gcPerc+align_perc,outfile='FAIRE/faireresults',seq='faire.taf'  ,align='align/',twoBit='hg18.2bit',winSize=250,offset=50,cnvWinSize=100000,cnvOffset=2500,basecountfile='faire.basecount' ,peakconfidence=.95,tol=10^-5,numProc=2,buildwin=1,pWinSize=200,pquant=1,refinepeaks=1,printFullOut=1,method='mixture',initmethod='count', diff=0,filetype='tagAlign', extension=134)


   
          }
          \keyword{file}
